steps:
  # Build and deploy backend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.backend', '-t', 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA', '.']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'policy-agent-backend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--set-env-vars'
      - 'GEMINI_API_KEY=${_GEMINI_API_KEY},SUPABASE_URL=${_SUPABASE_URL},SUPABASE_SERVICE_ROLE_KEY=${_SUPABASE_SERVICE_ROLE_KEY},ALLOWED_ORIGINS=${_ALLOWED_ORIGINS}'
      - '--memory'
      - '2Gi'
      - '--cpu'
      - '2'
      - '--max-instances'
      - '10'

  # Build and deploy frontend
  - name: 'gcr.io/cloud-builders/docker'
    args: ['build', '-f', 'Dockerfile.frontend', '-t', 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA', '.']
  
  - name: 'gcr.io/cloud-builders/docker'
    args: ['push', 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA']
  
  - name: 'gcr.io/cloud-builders/gcloud'
    args:
      - 'run'
      - 'deploy'
      - 'policy-agent-frontend'
      - '--image'
      - 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA'
      - '--region'
      - 'us-central1'
      - '--platform'
      - 'managed'
      - '--allow-unauthenticated'
      - '--memory'
      - '512Mi'
      - '--cpu'
      - '1'
      - '--max-instances'
      - '5'

substitutions:
  _GEMINI_API_KEY: 'your-gemini-api-key'
  _SUPABASE_URL: 'your-supabase-url'
  _SUPABASE_SERVICE_ROLE_KEY: 'your-supabase-service-role-key'
  _ALLOWED_ORIGINS: 'https://your-frontend-domain.com,http://localhost:3000'

images:
  - 'gcr.io/$PROJECT_ID/backend:$COMMIT_SHA'
  - 'gcr.io/$PROJECT_ID/frontend:$COMMIT_SHA' 